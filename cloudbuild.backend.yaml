steps:
  # 1. Build Docker image untuk backend
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/$TRIGGER_NAME", "."]
    dir: "backend"

  # 2. Push ke Container Registry / Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/$TRIGGER_NAME"]

  # 3. Deploy ke Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "$TRIGGER_NAME",
        "--image",
        "gcr.io/$PROJECT_ID/$TRIGGER_NAME",
        "--max-instances",
        "10",
        "--port",  # Ensure this matches the EXPOSE in Dockerfile and app listen port
        "4000",
        "--region",
        "us-central1",
        "--allow-unauthenticated",
        "--set-env-vars",
        # Replace placeholders with your actual cloud database details and JWT secrets
        # Values are taken from your .env file as a template
        "_ACCESS_TOKEN_SECRET=b91c9e543930c5379f40de3c25b5bbeb9eea347de8d4dae1b0a6de568fac0342,_REFRESH_TOKEN_SECRET=a38d6e41db9e23fb95ecc5bb89deea2fae4e30463ebaf48397ddfa3c7e542c32,_DB_HOST=your_cloud_database_host,_DB_USER=your_cloud_database_user,_DB_PASS=your_cloud_database_password,_DB_NAME=givetzy,_CORS_ORIGIN=http://localhost:5173,NODE_ENV=production",
        "--timeout",
        "3600", # This is a very long timeout, consider reducing it once stable
      ]

# Log hanya akan disimpan di Google Cloud Logging
# Log tidak akan disimpan di Google Cloud Storage (butuh hak akses).
options:
  logging: CLOUD_LOGGING_ONLY
